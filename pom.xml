<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>SpringBootMavenExample</artifactId>
    <name>SpringBootMavenExample</name>
    <description>SpringBootMavenExample</description>
    <packaging>war</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.5.RELEASE</version>
    </parent>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
<!-- malformed POM file issue fix : dependency tags instead -->
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
            <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

<!-- By default, Maven handles the deployment mechanism via the maven-deploy-plugin â€“ this mapped to the deployment phase of the default Maven lifecycle: -->
            <!-- <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.1</version>
            <executions>
                <execution>
                    <id>default-deploy</id>
                    <phase>deploy</phase>
                    <goals>
                        <goal>deploy</goal>
                    </goals>
                </execution>
            </executions>
            </plugin> -->

            <plugins>
              <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8</version>
              </plugin>            
            
<!--the first step in using another deployment plugin in the deploy phase is to disable the existing, default mapping  -->
            <!-- <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>${maven-deploy-plugin.version}</version>
            <configuration>
                <skip>true</skip>
            </configuration>
            </plugin> -->

<!-- define Nexus repository configuration -->
            <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.5.1</version>
            <executions>
                <execution>
                    <id>default-deploy</id>
                    <phase>deploy</phase>
                    <goals>
                        <goal>deploy</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <serverId>nexus</serverId>
                <nexusUrl>http://192.168.1.160:8081/</nexusUrl>
                <skipStaging>true</skipStaging>
            </configuration>
            </plugin>

<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source />
                    <target />
                </configuration>
            </plugin>

        </plugins>
        
<!-- In order for Maven to be able to deploy the artifacts it creates in the package phase of the build, it needs to define the repository information where the packaged artifacts will be deployed, via the distributionManagement element: -->

        <!-- <distributionManagement>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>http://192.168.1.160:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
        </distributionManagement> -->

        <distributionManagement>
            <repository>
            <id>nexus</id>
            <name>Releases</name>
            <url>http://192.168.1.160:8081/repository/maven-releases</url>
            </repository>
            <snapshotRepository>
            <id>nexus</id>
            <name>Snapshot</name>
            <url>http://192.168.1.160:8081/repository/maven-snapshots</url>
            </snapshotRepository>
        </distributionManagement>

<!-- Reference /// distributionManagement  -->

            <!-- <distributionManagement>
                <repository>
                <id>nexus</id>
                <name>Releases</name>
                <url>http://localhost:8081/repository/maven-releases</url>
                </repository>
                <snapshotRepository>
                <id>nexus</id>
                <name>Snapshot</name>
                <url>http://localhost:8081/repository/maven-snapshots</url>
                </snapshotRepository>
            </distributionManagement> -->

<!-- define Servers and Credentials -->
        <!-- <servers>
        <server>
            <id>nexus-snapshots</id>
            <username>deploy-user1</username>
            <password>password</password>
        </server>
        </servers> -->
    </build>
</project>